version: '3'

services:
    mysql:
        build: './mysql'
        ports:
            - '${FORWARD_DB_PORT:-3306}:3306'
        environment:
            MYSQL_ROOT_PASSWORD: '${DB_PASSWORD:-dev}'
            MYSQL_ROOT_HOST: "%"
            MYSQL_DATABASE: '${DB_DATABASE:-default}'
            MYSQL_USER: '${DB_USERNAME:-dev}'
            MYSQL_PASSWORD: '${DB_PASSWORD:-dev}'
            MYSQL_ALLOW_EMPTY_PASSWORD: 1
            TZ: 'UTC'
        volumes:
            - 'dev-mysql:/var/lib/mysql'
            - './mysql/create-testing-database.sh:/docker-entrypoint-initdb.d/10-create-testing-database.sh'
            - './mysql/reset-users-passwords.sh:/docker-entrypoint-initdb.d/10-reset-users-passwords.sh'
        networks:
            - dev
        healthcheck:
            test: [ "CMD", "mysqladmin", "ping", "-p${DB_PASSWORD:-dev}" ]
            retries: 3
            timeout: 5s

    pgsql:
        build: './pgsql'
        shm_size: 1g
        ports:
            - '${FORWARD_DB_PORT:-5432}:5432'
        environment:
            PGPASSWORD: '${DB_PASSWORD:-dev}'
            POSTGRES_DB: '${DB_DATABASE:-default}'
            POSTGRES_USER: '${DB_USERNAME:-dev}'
            POSTGRES_PASSWORD: '${DB_PASSWORD:-dev}'
            POSTGRES_VERSION: '${POSTGRES_VERSION:-alpine}'
        volumes:
            - 'dev-pgsql:/var/lib/postgresql/data'
            - './pgsql/create-testing-database.sql:/docker-entrypoint-initdb.d/10-create-testing-database.sql'
        networks:
            - dev
        healthcheck:
            test: [ "CMD", "pg_isready", "-q", "-d", "${DB_DATABASE:-default}", "-U", "${DB_USERNAME:-dev}" ]
            retries: 3
            timeout: 5s

    pgadmin:
        image: 'dpage/pgadmin4:${PGADMIN_VERSION:-latest}'
        environment:
            - 'PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL:-pgadmin@example.com}'
            - 'PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD:-pgadmin}'
        ports:
            - '${PGADMIN_PORT:-5050}:80'
        volumes:
            - dev-pgadmin:/var/lib/pgadmin
        networks:
            - dev
        depends_on:
            - pgsql

    redis:
        image: 'redis:alpine'
        ports:
            - '${FORWARD_REDIS_PORT:-6379}:6379'
        volumes:
            - 'dev-redis:/data'
        networks:
            - dev
        healthcheck:
            test: [ "CMD", "redis-cli", "ping" ]
            retries: 3
            timeout: 5s

    redis-webui:
        image: 'erikdubbelboer/phpredisadmin:latest'
        environment:
            - 'ADMIN_USER=${REDIS_WEBUI_USERNAME:-dev}'
            - 'ADMIN_PASS=${REDIS_WEBUI_PASSWORD:-dev}'
            - 'REDIS_1_HOST=${REDIS_WEBUI_CONNECT_HOST:-redis}'
            - 'REDIS_1_PORT=${REDIS_WEBUI_CONNECT_PORT:-6379}'
        volumes:
            - './redis/includes/config.sample.inc.php:/src/app/includes/config.sample.inc.php'
        ports:
            - '${REDIS_WEBUI_PORT:-9987}:80'
        networks:
            - dev
        depends_on:
            - redis

    rabbitmq:
        build: './rabbitmq'
        ports:
            - '${RABBITMQ_NODE_HOST_PORT:-5672}:5672'
            - '${RABBITMQ_MANAGEMENT_HTTP_HOST_PORT:-15672}:15672'
            - '${RABBITMQ_MANAGEMENT_HTTPS_HOST_PORT:-15671}:15671'
            - '${RABBITMQ_WEB_STOMP_HOST_PORT:-15674}:15674'
        privileged: true
        hostname: laradock-rabbitmq
        volumes:
            - dev-rabbitmq:/var/lib/rabbitmq
            - ./rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
            - ./rabbitmq/management_agent.disable_metrics_collector.conf:/etc/rabbitmq/conf.d/management_agent.disable_metrics_collector.conf
        networks:
            - dev

#    elasticsearch:
#        build:
#            context: ./elasticsearch
#            args:
#                - ELK_VERSION=${ELK_VERSION:-8.7.1}
#        volumes:
#            - dev-elasticsearch:/usr/share/elasticsearch/data
#        environment:
#            - 'cluster.name=laradock-cluster'
#            - 'node.name=laradock-node'
#            - 'bootstrap.memory_lock=true'
#            - 'xpack.security.enabled=false'
#            - 'xpack.security.transport.ssl.enabled=false'
#            - 'ES_JAVA_OPTS=-Xms2g -Xmx2g'
#            - 'cluster.initial_master_nodes=laradock-node'
#            - 'transport.host=127.0.0.1'
#            - 'http.host=0.0.0.0'
#        ulimits:
#            memlock:
#                soft: -1
#                hard: -1
#            nofile:
#                soft: 65536
#                hard: 65536
#        ports:
#            - '${ELASTICSEARCH_HOST_HTTP_PORT:-9200}:9200'
#            - '${ELASTICSEARCH_HOST_TRANSPORT_PORT:-9300}:9300'
#        networks:
#            - dev

    mailhog:
        image: 'mailhog/mailhog:latest'
        ports:
            - '${FORWARD_MAILHOG_PORT:-1025}:1025'
            - '${FORWARD_MAILHOG_DASHBOARD_PORT:-8025}:8025'
        networks:
            - dev

networks:
    dev:
        driver: bridge

volumes:
    dev-mysql:
        driver: local
    dev-redis:
        driver: local
    dev-pgsql:
        driver: local
    dev-pgadmin:
        driver: local
    dev-rabbitmq:
        driver: local
    dev-elasticsearch:
        driver: local
